# Tools
SCRIPT_FULLNAME=`readlink -f $0`
PYSCRIPT_FOLDER=`dirname $SCRIPT_FULLNAME`/py_scripts
FASTQC="/usr/local/bin/fastqc"
BWA="/12TBLVM/biotools/bwa-0.7.12/bwa"
SAMTOOLS="samtools"
BAM2FASTQ="/12TBLVM/biotools/bam2fastq-1.1.0/bam2fastq"
SAMSTAT="/12TBLVM/biotools/samstat-1.5/samstat-1.5.1/src/samstat"
PICARD="/12TBLVM/biotools/picard-tools-1.140/picard.jar"
GATK="/12TBLVM/biotools/GenomeAnalysisTK-3.3-0/GenomeAnalysisTK.jar"
GATK_TO_GVCF="/12TBLVM/biotools/gvcftools-0.16/bin/gatk_to_gvcf"
VEP="/12TBLVM/biotools/VEP79/ensembl-tools-release-79/scripts/variant_effect_predictor/variant_effect_predictor.pl"
VEP_STRANDSELECTOR="python3 ${PYSCRIPT_FOLDER}/VEPAnnotationSelector_1.1.9.py" 
VEP_FORMATTOR="python3 ${PYSCRIPT_FOLDER}/VAS_Formatter_1.0.5.py"
COUNT_INTERSECTION="python3 ${PYSCRIPT_FOLDER}/countIntersection.py"

# Database
HG_REF="/12TBLVM/Data/hg19-2/hg19_1toM/hg19_1toM.fa"
MG_REF="/12TBLVM/Data/MinhTri/A_BAYXENOHH/TEST_HCT116/NOD_ShiLtJ.fa.gz"
TARGET_REGIONS="/NextSeqVol/NexteraRapidCapture_Exome_TargetedRegions_v1.2Used.bed"

# File names 
HH_BAMFILE="${BASE_NAME}_HH.bam" 
HH_SORTED="${BASE_NAME}_HH.sorted" 
HH_METRICS_FILE="${BASE_NAME}_HH.metrics.picard"
HH_UNALNED="${BASE_NAME}_HH.unaligned"

HH_FASTQ="${BASE_NAME}_HH#.fastq"
HH_FASTQ_1="${BASE_NAME}_HH_1.fastq"
HH_FASTQ_2="${BASE_NAME}_HH_2.fastq"
MSE_BAMFILE="${BASE_NAME}_MSE.bam" 

HO_FASTQ="${BASE_NAME}_HO#.fastq"
HO_FASTQ_1="${BASE_NAME}_HO_1.fastq"
HO_FASTQ_2="${BASE_NAME}_HO_2.fastq"

HO_BAMFILE="${BASE_NAME}_HO.bam" 
HO_SORTED="${BASE_NAME}_HO.sorted" 
HO_METRICS_FILE="${BASE_NAME}_HO.metrics.picard"
HO_UNALNED="${BASE_NAME}_HO.unaligned"

HH_ALL_VARIANTS="${BASE_NAME}.all_variants.HH.vcf"
HH_PASS_EXTRACTED="${BASE_NAME}.PASS_extracted.HH.vcf"
HH_VEP_ANNO="${BASE_NAME}.annotated.HH.vcf"
HH_VEP_CHOOSESTRAND="${BASE_NAME}.choosetrand.HH.txt"
HH_VEP_FORMATTED="${BASE_NAME}.formatted.HH.txt"
HH_ASNMAF="${BASE_NAME}_asn_maf.HH.txt"

HO_ALL_VARIANTS="${BASE_NAME}.all_variants.HO.vcf"
HO_PASS_EXTRACTED="${BASE_NAME}.PASS_extracted.HO.vcf"
HO_VEP_ANNO="${BASE_NAME}.annotated.HO.vcf"
HO_VEP_CHOOSESTRAND="${BASE_NAME}.choosetrand.HO.txt"
HO_VEP_FORMATTED="${BASE_NAME}.formatted.HO.txt"
HO_ASNMAF="${BASE_NAME}_asn_maf.HO.txt"

VAR_REPORT="${BASE_NAME}_variant_count_report.txt"

# Read groups
DATE=`date +%Y%m%d`
RG="@RG\tID:fi\tLB:Nextera_Rapid_Capture_Enrichment\tPL:ILLUMINA-NextSeq500\tPU:@NS500768\tSM:${BASE_NAME}\tCN:CTRAD-CSI_Singapore\tDS:NIL\tDT:$DATE"

# Functions
start_time=$(date +%s)
last_time=$(date +%s)

function getTime {
	hours=$[ $1 / 3600 ]
	minutes=$[ $[$1 % 3600] / 60]
	seconds=$[ $[$1 % 3600] % 60]
	echo "${hours}:${minutes}:${seconds}"
}

function run {
	echo >> ${LOG_FILE}
	
	timenow=`date +"%Y-%m-%d %H:%M:%S"`
	echo "$timenow Process: $1" >> ${LOG_FILE}
	eval $1
	
	if [ $? -ne 0 ]; then
		echo " + Process fails with status $?" >> ${LOG_FILE}
		echo >> $LOG_FILE
		echo "Script exits on $(date)" >> ${LOG_FILE}
		exit
	fi
	
	time_elapsed=$[ `date +%s` - $last_time ]
	last_time=$(date +%s)
	echo " ++++++++ Process runtime: $(getTime $time_elapsed)" >> ${LOG_FILE}
}

function time_total {
	echo >> $LOG_FILE
	
	time_elapsed=$[ `date +%s` - $start_time ]
	echo "Total time elapsed : $(getTime $time_elapsed)" >> ${LOG_FILE}
}
