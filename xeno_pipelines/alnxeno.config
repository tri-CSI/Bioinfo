# Tools
SCRIPT_FULLNAME=`readlink -f xenograft-1.0.1.sh`
PYSCRIPT_FOLDER=`dirname $SCRIPT_FULLNAME`/py_scriptss
FASTQC="/usr/local/bin/fastqc"
BWA="/12TBLVM/biotools/bwa-0.7.12/bwa"
SAMTOOLS="samtools"
SAMSTAT="/12TBLVM/biotools/samstat-1.5/samstat-1.5.1/src/samstat"
LIFTOVER="/12TBLVM/Data/MinhTri/8_XENOGRAFT_2/liftOver"
PICARD="java -jar /12TBLVM/biotools/picard-tools-1.101/picard-tools-1.101/"
GATK="/12TBLVM/biotools/GenomeAnalysisTK-3.3-0/GenomeAnalysisTK.jar"
GATK_TO_GVCF="/12TBLVM/biotools/gvcftools-0.16/bin/gatk_to_gvcf"
VEP="/12TBLVM/biotools/VEP79/ensembl-tools-release-79/scripts/variant_effect_predictor/variant_effect_predictor.pl"
VEP_STRANDSELECTOR="python3 ${INSTALL_FOLDER}/VEPAnnotationSelector_1.1.9.py" 
VEP_FORMATTOR="python3 ${INSTALL_FOLDER}/VAS_Formatter_1.0.5.py"
COMPARE_MSE="python3 ${INSTALL_FOLDER}/compareMouse.py"

# Database
HG19="/12TBLVM/Data/hg19-2/hg19_1toM/hg19_1toM.fa"
BALB_CJ="/12TBLVM/Data/MinhTri/8_XENOGRAFT_2/BALB_cJ.chromosome.fa"
TARGET_REGIONS="/NextSeqVol/NexteraRapidCapture_Exome_TargetedRegions_v1.2Used.bed"
LO_HG38_MM10="/12TBLVM/Data/MinhTri/8_XENOGRAFT_2/hg19ToMm10.over.chain.gz"

# File names 
HU_SORTED="${BASE_NAME}.sorted" 
HU_METRICS_FILE="${BASE_NAME}.metrics.picard"
HU_BAMFILE="${BASE_NAME}.bam" 
HU_UNALNED="${BASE_NAME}_unaligned.bam"
ALL_VARIANTS="${BASE_NAME}.all_variants.vcf"
QUAL_FILTERED="${BASE_NAME}.qual_filtered.vcf"
PASS_EXTRACTED="${BASE_NAME}.PASS_extracted.vcf"
VEP_ANNO="${BASE_NAME}.annotated.vcf"
VEP_CHOOSESTRAND="${BASE_NAME}.choosestrand.txt"
VEP_FORMATTED="${BASE_NAME}.formatted.txt"
VAR_LIST="${BASE_NAME}.var_list.bed"
MSE_VAR_LIST="${BASE_NAME}.mse_varlist.bed"
UNMAPPED="${BASE_NAME}.unmapped_varList.bed"
ALLVAR_LIST="${BASE_NAME}_all_unfiltered.txt"
ASNMAF_LIST="${BASE_NAME}_asn_maf.txt"
VAR_REPORT="${BASE_NAME}_variant_count_report.txt"

# Read groups
RG="@RG\tID:{0}\tLB:Nextera_Rapid_Capture_Enrichment\tPL:ILLUMINA-NextSeq500\tPU:@NS500768\tSM:${BASE_NAME}\tCN:CTRAD-CSI_Singapore\tDS:NIL\tDT:20150519"

# Functions
start_time=$(date +%s)
last_time=$(date +%s)

function getTime {
	hours=$[ $1 / 3600 ]
	minutes=$[ $[$1 % 3600] / 60]
	seconds=$[ $[$1 % 3600] % 60]
	echo "${hours}:${minutes}:${seconds}"
}

function run {
	echo >> ${LOG_FILE}
	
	timenow=`date +"%Y-%m-%d %H:%M:%S"`
	echo "$timenow Process: $1" >> ${LOG_FILE}
	eval $1
	
	if [ $? -ne 0 ]; then
		echo " + Process fails with status $?" >> ${LOG_FILE}
		echo >> $LOG_FILE
		echo "Script exits on $(date)" >> ${LOG_FILE}
		exit
	fi
	
	time_elapsed=$[ `date +%s` - $last_time ]
	last_time=$(date +%s)
	echo " ++++++++ Process runtime: $(getTime $time_elapsed)" >> ${LOG_FILE}
}

